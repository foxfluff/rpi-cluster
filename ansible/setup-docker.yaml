# Install docker and configure all nodes to work together in a swarm

- hosts: cluster
  remote_user: pi
  become: yes
  vars:
    apt_source: deb [arch=armhf] https://download.docker.com/linux/raspbian buster stable
    gpg_url: https://download.docker.com/linux/raspbian/gpg
    gpg_id: "0x0EBFCD88"
    swarm_name: rpi-cluster
  tasks:
  # Going to emulate what the docker convenience script does.
  - name: Install Dependencies.
    apt:
      update_cache: yes
      name:
      - apt-transport-https
      - ca-certificates
      - curl
      - python3-pip # needed later to install Ansible dependency
      force_apt_get: yes
  - name: Download and add GPG key.
    apt_key:
      url: "{{ gpg_url }}"
      id: "{{ gpg_id }}"
  - name: Modify docker sources file.
    lineinfile:
      path: /etc/apt/sources.list.d/docker.list
      regexp: ^deb.*?download.docker.com.*$
      line: "{{ apt_source }}"
      create: yes
  - name: Install docker-ce
    apt:
      update_cache: yes
      force_apt_get: yes
      name: docker-ce
      install_recommends: no
    ignore_errors: yes # TODO dear god please change this when possible
  - name: Reboot systems to fix current issue on Buster
    reboot:
  - name: Add pi user to the docker group
    user:
      name: pi
      groups: docker
      append: yes
  - name: Start docker service
    systemd:
      name: docker
      state: started
      enabled: yes
  - name: Print version installed
    command: "docker -v"
    register: version
    changed_when: False # this just echos output so nothing will change on the host.
  - debug:
      msg: "{{ version.stdout }}"
  - name: Install Ansible dependencies for docker
    pip:
      name: docker
  - name: Docker Hello World
    docker_container:
      image: hello-world
      name: hello-world
      auto_remove: yes
    register: docker_status
  - name: Notify if container didn't run
    debug:
      msg: "Error running hello-world!, the container status was {{ docker_status.container.State.Status}} "
    when: docker_status.container.State.Status != "running"
  - name: Clean up hello-world image
    docker_image:
      name: hello-world
      force_absent: yes

- hosts: cluster_manager
  remote_user: pi
  become: true
  tasks:
  - name: Setup swarm manager
    docker_swarm:
      state: present
    register: swarm

- hosts: cluster
  remote_user: pi
  become: true
  tasks:
  - name: Setup swarm workers
    docker_swarm:
      state: join
      join_token: " {{ swarm.swarm_facts.JoinTokens.Worker }} "
      remote_addrs: "{{ cluster_manager }}"
      advertise_addr: "{{ inventory_hostname }}"

- hosts: cluster_manager
  remote_user: pi
  become: true
  tasks:
  - name: Get node info
    docker_node_info:
    register: node_info
  - debug:
      var: node_info